name: Deploy to ECS
description: Applies a given task definition to a running service

inputs:
  task-definition:
    description: "Task Definition file"
    required: true
  service:
    description: "Service to deploy"
    required: true
  cluster:
    description: "Cluster to deploy to"
    required: true
  aws_account:
    description: "AWS account to deploy to"
    required: true
  aws_access_key_id:
    required: true
    description: AWS access key
  aws_secret_access_key:
    required: true
    description: AWS secret key
  aws_role:
    description: "AWS role to use"
    required: true
  aws_region:
    description: "AWS region to use"
    required: true
  role-duration-seconds:
    description: "Role duration in seconds (default: 1 hour)"
    required: false
    default: "3600"
  wait-for-service-stability:
    description: "Whether to wait for the ECS service to reach stable state after deploying the new task definition. Valid value is true. Will default to not waiting."
    required: false
    default: "false"
  force-new-deployment:
    description: "Whether to force a new deployment of the service. Valid value is true. Will default to not force a new deployment."
    required: false
    default: "false"


runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      id: aws
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: "arn:aws:iam::${{ inputs.aws_account  }}:role/${{ inputs.aws_role }}"
        role-skip-session-tagging	: true
        role-duration-seconds: "${{ inputs.role-duration-seconds }}"

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2.3.1
      with:
        task-definition: ${{ inputs.task-definition }}
        service: ${{ inputs.service }}
        cluster: "${{ inputs.cluster }}"
        wait-for-service-stability: ${{ inputs.wait-for-service-stability }}
        force-new-deployment: ${{ inputs.force-new-deployment }}
